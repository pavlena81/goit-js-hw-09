{"mappings":"gfAiBAA,EAAA,SAEa,CACXC,OAAQC,SAASC,cAAc,SAC/BC,QAASF,SAASC,cAAc,uBAChCE,OAAQH,SAASC,cAAc,sBAC/BG,SAAUJ,SAASC,cAAc,yBAG9BF,OAAOM,iBAAiB,UAE7B,SAAuBC,EAAUC,GACTC,KAAKC,Y","sources":["src/js/03-promises.js"],"sourcesContent":["\n// Напиши скрипт, который при сабмите формы вызывает функцию\n// createPromise(position, delay) столько раз,\n//   сколько ввели в поле amount.При каждом вызове передай \n//    номер создаваемого промиса(position) и задержку \n//    учитывая введенную пользователем первую задержку(delay)\n//     и шаг(step).\n\n\n// Дополни код функции createPromise так, чтобы она \n// возвращала один промис, который выполянется или \n// отклоняется через delay времени.Значением промиса \n// должен быть объект, в котором будут свойства position и \n// delay со значениями одноименных параметров.\n// Используй начальный код функции для выбора того,\n//   что нужно сделать с промисом - выполнить или отклонить.\n\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  formEl: document.querySelector('.form'),\n  delayEl: document.querySelector('input[name=\"delay\"]'),\n  stepEl: document.querySelector('input[name=\"step\"]'),\n  amountEl: document.querySelector('input[name=\"amount\"]'),\n};\n\nrefs.formEl.addEventListener('submit', createPromise);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    // Fulfill\n  } else {\n    // Reject\n  }\n}\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });\n\n//   const makePromise = (text, delay) => {\n//   return new Promise(resolve => {\n//     setTimeout(() => resolve(text), delay);\n//   });\n// };\n\n// const promiseA = makePromise(\"promiseA value\", 1000);\n// const promiseB = makePromise(\"promiseB value\", 3000);\n\n// Promise.all([promiseA, promiseB])\n//   .then(value => console.log(value)) //[\"promiseA value\", \"promiseB value\"]\n//   .catch(error => console.log(error));"],"names":["parcelRequire","formEl","document","querySelector","delayEl","stepEl","amountEl","addEventListener","position","delay","Math","random"],"version":3,"file":"03-promises.30172e0a.js.map"}